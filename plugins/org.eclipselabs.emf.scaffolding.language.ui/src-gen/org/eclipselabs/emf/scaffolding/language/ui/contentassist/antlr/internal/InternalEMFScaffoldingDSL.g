/*
* generated by Xtext
*/
grammar InternalEMFScaffoldingDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipselabs.emf.scaffolding.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipselabs.emf.scaffolding.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipselabs.emf.scaffolding.language.services.EMFScaffoldingDSLGrammarAccess;

}

@parser::members {
 
 	private EMFScaffoldingDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EMFScaffoldingDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleScaffolding
entryRuleScaffolding 
:
{ before(grammarAccess.getScaffoldingRule()); }
	 ruleScaffolding
{ after(grammarAccess.getScaffoldingRule()); } 
	 EOF 
;

// Rule Scaffolding
ruleScaffolding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScaffoldingAccess().getGroup()); }
(rule__Scaffolding__Group__0)
{ after(grammarAccess.getScaffoldingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScaffoldingElement
entryRuleScaffoldingElement 
:
{ before(grammarAccess.getScaffoldingElementRule()); }
	 ruleScaffoldingElement
{ after(grammarAccess.getScaffoldingElementRule()); } 
	 EOF 
;

// Rule ScaffoldingElement
ruleScaffoldingElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScaffoldingElementAccess().getAlternatives()); }
(rule__ScaffoldingElement__Alternatives)
{ after(grammarAccess.getScaffoldingElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScaffold
entryRuleScaffold 
:
{ before(grammarAccess.getScaffoldRule()); }
	 ruleScaffold
{ after(grammarAccess.getScaffoldRule()); } 
	 EOF 
;

// Rule Scaffold
ruleScaffold
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScaffoldAccess().getGroup()); }
(rule__Scaffold__Group__0)
{ after(grammarAccess.getScaffoldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhenBlock
entryRuleWhenBlock 
:
{ before(grammarAccess.getWhenBlockRule()); }
	 ruleWhenBlock
{ after(grammarAccess.getWhenBlockRule()); } 
	 EOF 
;

// Rule WhenBlock
ruleWhenBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhenBlockAccess().getGroup()); }
(rule__WhenBlock__Group__0)
{ after(grammarAccess.getWhenBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleMatch
entryRuleMatch 
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchAccess().getGroup()); }
(rule__Match__Group__0)
{ after(grammarAccess.getMatchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
(rule__Variable__NameAssignment)
{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBindingExpression
entryRuleBindingExpression 
:
{ before(grammarAccess.getBindingExpressionRule()); }
	 ruleBindingExpression
{ after(grammarAccess.getBindingExpressionRule()); } 
	 EOF 
;

// Rule BindingExpression
ruleBindingExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingExpressionAccess().getGroup()); }
(rule__BindingExpression__Group__0)
{ after(grammarAccess.getBindingExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBindingExpressionHigh
entryRuleBindingExpressionHigh 
:
{ before(grammarAccess.getBindingExpressionHighRule()); }
	 ruleBindingExpressionHigh
{ after(grammarAccess.getBindingExpressionHighRule()); } 
	 EOF 
;

// Rule BindingExpressionHigh
ruleBindingExpressionHigh
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getGroup()); }
(rule__BindingExpressionHigh__Group__0)
{ after(grammarAccess.getBindingExpressionHighAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBindingTerminalExpression
entryRuleBindingTerminalExpression 
:
{ before(grammarAccess.getBindingTerminalExpressionRule()); }
	 ruleBindingTerminalExpression
{ after(grammarAccess.getBindingTerminalExpressionRule()); } 
	 EOF 
;

// Rule BindingTerminalExpression
ruleBindingTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getAlternatives()); }
(rule__BindingTerminalExpression__Alternatives)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionHigh
entryRuleExpressionHigh 
:
{ before(grammarAccess.getExpressionHighRule()); }
	 ruleExpressionHigh
{ after(grammarAccess.getExpressionHighRule()); } 
	 EOF 
;

// Rule ExpressionHigh
ruleExpressionHigh
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionHighAccess().getGroup()); }
(rule__ExpressionHigh__Group__0)
{ after(grammarAccess.getExpressionHighAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveLiteral
entryRulePrimitiveLiteral 
:
{ before(grammarAccess.getPrimitiveLiteralRule()); }
	 rulePrimitiveLiteral
{ after(grammarAccess.getPrimitiveLiteralRule()); } 
	 EOF 
;

// Rule PrimitiveLiteral
rulePrimitiveLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getAlternatives()); }
(rule__PrimitiveLiteral__Alternatives)
{ after(grammarAccess.getPrimitiveLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureRefLiteral
entryRuleFeatureRefLiteral 
:
{ before(grammarAccess.getFeatureRefLiteralRule()); }
	 ruleFeatureRefLiteral
{ after(grammarAccess.getFeatureRefLiteralRule()); } 
	 EOF 
;

// Rule FeatureRefLiteral
ruleFeatureRefLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureRefLiteralAccess().getRefAssignment()); }
(rule__FeatureRefLiteral__RefAssignment)
{ after(grammarAccess.getFeatureRefLiteralAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThenBlock
entryRuleThenBlock 
:
{ before(grammarAccess.getThenBlockRule()); }
	 ruleThenBlock
{ after(grammarAccess.getThenBlockRule()); } 
	 EOF 
;

// Rule ThenBlock
ruleThenBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThenBlockAccess().getGroup()); }
(rule__ThenBlock__Group__0)
{ after(grammarAccess.getThenBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreateStatement
entryRuleCreateStatement 
:
{ before(grammarAccess.getCreateStatementRule()); }
	 ruleCreateStatement
{ after(grammarAccess.getCreateStatementRule()); } 
	 EOF 
;

// Rule CreateStatement
ruleCreateStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreateStatementAccess().getGroup()); }
(rule__CreateStatement__Group__0)
{ after(grammarAccess.getCreateStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreateClass
entryRuleCreateClass 
:
{ before(grammarAccess.getCreateClassRule()); }
	 ruleCreateClass
{ after(grammarAccess.getCreateClassRule()); } 
	 EOF 
;

// Rule CreateClass
ruleCreateClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreateClassAccess().getGroup()); }
(rule__CreateClass__Group__0)
{ after(grammarAccess.getCreateClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListLiteral
entryRuleListLiteral 
:
{ before(grammarAccess.getListLiteralRule()); }
	 ruleListLiteral
{ after(grammarAccess.getListLiteralRule()); } 
	 EOF 
;

// Rule ListLiteral
ruleListLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListLiteralAccess().getGroup()); }
(rule__ListLiteral__Group__0)
{ after(grammarAccess.getListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarRefLiteral
entryRuleVarRefLiteral 
:
{ before(grammarAccess.getVarRefLiteralRule()); }
	 ruleVarRefLiteral
{ after(grammarAccess.getVarRefLiteralRule()); } 
	 EOF 
;

// Rule VarRefLiteral
ruleVarRefLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarRefLiteralAccess().getGroup()); }
(rule__VarRefLiteral__Group__0)
{ after(grammarAccess.getVarRefLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetter
entryRuleSetter 
:
{ before(grammarAccess.getSetterRule()); }
	 ruleSetter
{ after(grammarAccess.getSetterRule()); } 
	 EOF 
;

// Rule Setter
ruleSetter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetterAccess().getGroup()); }
(rule__Setter__Group__0)
{ after(grammarAccess.getSetterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdateStatement
entryRuleUpdateStatement 
:
{ before(grammarAccess.getUpdateStatementRule()); }
	 ruleUpdateStatement
{ after(grammarAccess.getUpdateStatementRule()); } 
	 EOF 
;

// Rule UpdateStatement
ruleUpdateStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup()); }
(rule__UpdateStatement__Group__0)
{ after(grammarAccess.getUpdateStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScaffoldingElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldingElementAccess().getRuleParserRuleCall_0()); }
	ruleRule
{ after(grammarAccess.getScaffoldingElementAccess().getRuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getScaffoldingElementAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getScaffoldingElementAccess().getFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getGroup_1_0()); }
(rule__WhenBlock__Group_1_0__0)
{ after(grammarAccess.getWhenBlockAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getWhenBlockAccess().getMatchesAssignment_1_1()); }
(rule__WhenBlock__MatchesAssignment_1_1)
{ after(grammarAccess.getWhenBlockAccess().getMatchesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getGroup_0()); }
(rule__BindingTerminalExpression__Group_0__0)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getFeatureRefLiteralParserRuleCall_1()); }
	ruleFeatureRefLiteral
{ after(grammarAccess.getBindingTerminalExpressionAccess().getFeatureRefLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getGroup_2()); }
(rule__BindingTerminalExpression__Group_2__0)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3()); }
(rule__BindingTerminalExpression__Group_3__0)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getPrimitiveLiteralParserRuleCall_4()); }
	rulePrimitiveLiteral
{ after(grammarAccess.getBindingTerminalExpressionAccess().getPrimitiveLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getVarRefLiteralParserRuleCall_1()); }
	ruleVarRefLiteral
{ after(grammarAccess.getTerminalExpressionAccess().getVarRefLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getCreateClassParserRuleCall_2()); }
	ruleCreateClass
{ after(grammarAccess.getTerminalExpressionAccess().getCreateClassParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
(rule__TerminalExpression__Group_3__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
(rule__TerminalExpression__Group_4__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getPrimitiveLiteralParserRuleCall_5()); }
	rulePrimitiveLiteral
{ after(grammarAccess.getTerminalExpressionAccess().getPrimitiveLiteralParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getListLiteralParserRuleCall_0()); }
	ruleListLiteral
{ after(grammarAccess.getPrimitiveLiteralAccess().getListLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralAccess().getStringLiteralParserRuleCall_1()); }
	ruleStringLiteral
{ after(grammarAccess.getPrimitiveLiteralAccess().getStringLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralAccess().getNullLiteralParserRuleCall_2()); }
	ruleNullLiteral
{ after(grammarAccess.getPrimitiveLiteralAccess().getNullLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralAccess().getGroup_3()); }
(rule__PrimitiveLiteral__Group_3__0)
{ after(grammarAccess.getPrimitiveLiteralAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralAccess().getGroup_4()); }
(rule__PrimitiveLiteral__Group_4__0)
{ after(grammarAccess.getPrimitiveLiteralAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getPrimitiveLiteralAccess().getGroup_5()); }
(rule__PrimitiveLiteral__Group_5__0)
{ after(grammarAccess.getPrimitiveLiteralAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getThenKeyword_0_0()); }

	'then' 

{ after(grammarAccess.getThenBlockAccess().getThenKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getThenBlockAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }

	'->' 

{ after(grammarAccess.getThenBlockAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getGroup_1_0()); }
(rule__ThenBlock__Group_1_0__0)
{ after(grammarAccess.getThenBlockAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getThenBlockAccess().getStatementsAssignment_1_1()); }
(rule__ThenBlock__StatementsAssignment_1_1)
{ after(grammarAccess.getThenBlockAccess().getStatementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCreateStatementParserRuleCall_0()); }
	ruleCreateStatement
{ after(grammarAccess.getStatementAccess().getCreateStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_1()); }
	ruleUpdateStatement
{ after(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getSetterAccess().getColonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getSetterAccess().getPlusSignEqualsSignKeyword_1_1()); }

	'+=' 

{ after(grammarAccess.getSetterAccess().getPlusSignEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Scaffolding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scaffolding__Group__0__Impl
	rule__Scaffolding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scaffolding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldingAccess().getScaffoldAssignment_0()); }
(rule__Scaffolding__ScaffoldAssignment_0)
{ after(grammarAccess.getScaffoldingAccess().getScaffoldAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scaffolding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scaffolding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scaffolding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldingAccess().getElementsAssignment_1()); }
(rule__Scaffolding__ElementsAssignment_1)*
{ after(grammarAccess.getScaffoldingAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scaffold__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scaffold__Group__0__Impl
	rule__Scaffold__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scaffold__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldAccess().getScaffoldKeyword_0()); }

	'scaffold' 

{ after(grammarAccess.getScaffoldAccess().getScaffoldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scaffold__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scaffold__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scaffold__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldAccess().getRefPackageAssignment_1()); }
(rule__Scaffold__RefPackageAssignment_1)
{ after(grammarAccess.getScaffoldAccess().getRefPackageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
(rule__Rule__NameAssignment_1)
{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getWhenAssignment_2()); }
(rule__Rule__WhenAssignment_2)
{ after(grammarAccess.getRuleAccess().getWhenAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getThenAssignment_3()); }
(rule__Rule__ThenAssignment_3)
{ after(grammarAccess.getRuleAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WhenBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenBlock__Group__0__Impl
	rule__WhenBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getWhenBlockAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getAlternatives_1()); }
(rule__WhenBlock__Alternatives_1)
{ after(grammarAccess.getWhenBlockAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhenBlock__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenBlock__Group_1_0__0__Impl
	rule__WhenBlock__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getLeftCurlyBracketKeyword_1_0_0()); }

	'{' 

{ after(grammarAccess.getWhenBlockAccess().getLeftCurlyBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenBlock__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenBlock__Group_1_0__1__Impl
	rule__WhenBlock__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getMatchesAssignment_1_0_1()); }
(rule__WhenBlock__MatchesAssignment_1_0_1)*
{ after(grammarAccess.getWhenBlockAccess().getMatchesAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenBlock__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenBlock__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getRightCurlyBracketKeyword_1_0_2()); }

	'}' 

{ after(grammarAccess.getWhenBlockAccess().getRightCurlyBracketKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Match__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__0__Impl
	rule__Match__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getGroup_0()); }
(rule__Match__Group_0__0)?
{ after(grammarAccess.getMatchAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__1__Impl
	rule__Match__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getTypeAssignment_1()); }
(rule__Match__TypeAssignment_1)
{ after(grammarAccess.getMatchAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getGroup_2()); }
(rule__Match__Group_2__0)?
{ after(grammarAccess.getMatchAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Match__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_0__0__Impl
	rule__Match__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getVarAssignment_0_0()); }
(rule__Match__VarAssignment_0_0)
{ after(grammarAccess.getMatchAccess().getVarAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getMatchAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Match__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_2__0__Impl
	rule__Match__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getMatchAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_2__1__Impl
	rule__Match__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getGroup_2_1()); }
(rule__Match__Group_2_1__0)?
{ after(grammarAccess.getMatchAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getMatchAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Match__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_2_1__0__Impl
	rule__Match__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getParamsAssignment_2_1_0()); }
(rule__Match__ParamsAssignment_2_1_0)
{ after(grammarAccess.getMatchAccess().getParamsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getGroup_2_1_1()); }
(rule__Match__Group_2_1_1__0)*
{ after(grammarAccess.getMatchAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Match__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_2_1_1__0__Impl
	rule__Match__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getMatchAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getParamsAssignment_2_1_1_1()); }
(rule__Match__ParamsAssignment_2_1_1_1)
{ after(grammarAccess.getMatchAccess().getParamsAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getPropertyAssignment_0()); }
(rule__Param__PropertyAssignment_0)
{ after(grammarAccess.getParamAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getGroup_1()); }
(rule__Param__Group_1__0)?
{ after(grammarAccess.getParamAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group_1__0__Impl
	rule__Param__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getParamAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getVarAssignment_1_1()); }
(rule__Param__VarAssignment_1_1)
{ after(grammarAccess.getParamAccess().getVarAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BindingExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpression__Group__0__Impl
	rule__BindingExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionAccess().getBindingExpressionHighParserRuleCall_0()); }
	ruleBindingExpressionHigh
{ after(grammarAccess.getBindingExpressionAccess().getBindingExpressionHighParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionAccess().getGroup_1()); }
(rule__BindingExpression__Group_1__0)?
{ after(grammarAccess.getBindingExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BindingExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpression__Group_1__0__Impl
	rule__BindingExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionAccess().getOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getBindingExpressionAccess().getOperationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpression__Group_1__1__Impl
	rule__BindingExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionAccess().getOpAssignment_1_1()); }
(rule__BindingExpression__OpAssignment_1_1)
{ after(grammarAccess.getBindingExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionAccess().getRightAssignment_1_2()); }
(rule__BindingExpression__RightAssignment_1_2)
{ after(grammarAccess.getBindingExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingExpressionHigh__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpressionHigh__Group__0__Impl
	rule__BindingExpressionHigh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpressionHigh__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getBindingTerminalExpressionParserRuleCall_0()); }
	ruleBindingTerminalExpression
{ after(grammarAccess.getBindingExpressionHighAccess().getBindingTerminalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingExpressionHigh__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpressionHigh__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpressionHigh__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getGroup_1()); }
(rule__BindingExpressionHigh__Group_1__0)?
{ after(grammarAccess.getBindingExpressionHighAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BindingExpressionHigh__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpressionHigh__Group_1__0__Impl
	rule__BindingExpressionHigh__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpressionHigh__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getBindingExpressionHighAccess().getOperationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingExpressionHigh__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpressionHigh__Group_1__1__Impl
	rule__BindingExpressionHigh__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpressionHigh__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getOpAssignment_1_1()); }
(rule__BindingExpressionHigh__OpAssignment_1_1)
{ after(grammarAccess.getBindingExpressionHighAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingExpressionHigh__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingExpressionHigh__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpressionHigh__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getRightAssignment_1_2()); }
(rule__BindingExpressionHigh__RightAssignment_1_2)
{ after(grammarAccess.getBindingExpressionHighAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingTerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_0__0__Impl
	rule__BindingTerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getBindingTerminalExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_0__1__Impl
	rule__BindingTerminalExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getBindingExpressionParserRuleCall_0_1()); }
	ruleBindingExpression
{ after(grammarAccess.getBindingTerminalExpressionAccess().getBindingExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getBindingTerminalExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingTerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_2__0__Impl
	rule__BindingTerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getNotExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getNotExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_2__1__Impl
	rule__BindingTerminalExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getExclamationMarkKeyword_2_1()); }

	'!' 

{ after(grammarAccess.getBindingTerminalExpressionAccess().getExclamationMarkKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getExpAssignment_2_2()); }
(rule__BindingTerminalExpression__ExpAssignment_2_2)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getExpAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingTerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3__0__Impl
	rule__BindingTerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getFunctionLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getFunctionLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3__1__Impl
	rule__BindingTerminalExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getFunctionAssignment_3_1()); }
(rule__BindingTerminalExpression__FunctionAssignment_3_1)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getFunctionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3_2()); }
(rule__BindingTerminalExpression__Group_3_2__0)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingTerminalExpression__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3_2__0__Impl
	rule__BindingTerminalExpression__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getLeftParenthesisKeyword_3_2_0()); }

	'(' 

{ after(grammarAccess.getBindingTerminalExpressionAccess().getLeftParenthesisKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3_2__1__Impl
	rule__BindingTerminalExpression__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3_2_1()); }
(rule__BindingTerminalExpression__Group_3_2_1__0)?
{ after(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getRightParenthesisKeyword_3_2_2()); }

	')' 

{ after(grammarAccess.getBindingTerminalExpressionAccess().getRightParenthesisKeyword_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BindingTerminalExpression__Group_3_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3_2_1__0__Impl
	rule__BindingTerminalExpression__Group_3_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsAssignment_3_2_1_0()); }
(rule__BindingTerminalExpression__ArgumentsAssignment_3_2_1_0)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsAssignment_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_3_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3_2_1_1()); }
(rule__BindingTerminalExpression__Group_3_2_1_1__0)*
{ after(grammarAccess.getBindingTerminalExpressionAccess().getGroup_3_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BindingTerminalExpression__Group_3_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3_2_1_1__0__Impl
	rule__BindingTerminalExpression__Group_3_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getCommaKeyword_3_2_1_1_0()); }

	',' 

{ after(grammarAccess.getBindingTerminalExpressionAccess().getCommaKeyword_3_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BindingTerminalExpression__Group_3_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BindingTerminalExpression__Group_3_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__Group_3_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsAssignment_3_2_1_1_1()); }
(rule__BindingTerminalExpression__ArgumentsAssignment_3_2_1_1_1)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsAssignment_3_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionHighParserRuleCall_0()); }
	ruleExpressionHigh
{ after(grammarAccess.getExpressionAccess().getExpressionHighParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getOperationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOpAssignment_1_1()); }
(rule__Expression__OpAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
(rule__Expression__RightAssignment_1_2)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionHigh__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionHigh__Group__0__Impl
	rule__ExpressionHigh__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionHigh__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionHighAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getExpressionHighAccess().getTerminalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionHigh__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionHigh__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionHigh__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionHighAccess().getGroup_1()); }
(rule__ExpressionHigh__Group_1__0)?
{ after(grammarAccess.getExpressionHighAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionHigh__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionHigh__Group_1__0__Impl
	rule__ExpressionHigh__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionHigh__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionHighAccess().getOperationLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpressionHighAccess().getOperationLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionHigh__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionHigh__Group_1__1__Impl
	rule__ExpressionHigh__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionHigh__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionHighAccess().getOpAssignment_1_1()); }
(rule__ExpressionHigh__OpAssignment_1_1)
{ after(grammarAccess.getExpressionHighAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionHigh__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionHigh__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionHigh__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionHighAccess().getRightAssignment_1_2()); }
(rule__ExpressionHigh__RightAssignment_1_2)
{ after(grammarAccess.getExpressionHighAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
	rule__TerminalExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNotExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getNotExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__1__Impl
	rule__TerminalExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExclamationMarkKeyword_3_1()); }

	'!' 

{ after(grammarAccess.getTerminalExpressionAccess().getExclamationMarkKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpAssignment_3_2()); }
(rule__TerminalExpression__ExpAssignment_3_2)
{ after(grammarAccess.getTerminalExpressionAccess().getExpAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getFunctionLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getFunctionLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__1__Impl
	rule__TerminalExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getFunctionAssignment_4_1()); }
(rule__TerminalExpression__FunctionAssignment_4_1)
{ after(grammarAccess.getTerminalExpressionAccess().getFunctionAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4_2()); }
(rule__TerminalExpression__Group_4_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4_2__0__Impl
	rule__TerminalExpression__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_4_2_0()); }

	'(' 

{ after(grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4_2__1__Impl
	rule__TerminalExpression__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4_2_1()); }
(rule__TerminalExpression__Group_4_2_1__0)?
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_4_2_2()); }

	')' 

{ after(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_4_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4_2_1__0__Impl
	rule__TerminalExpression__Group_4_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getArgumentsAssignment_4_2_1_0()); }
(rule__TerminalExpression__ArgumentsAssignment_4_2_1_0)
{ after(grammarAccess.getTerminalExpressionAccess().getArgumentsAssignment_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4_2_1_1()); }
(rule__TerminalExpression__Group_4_2_1_1__0)*
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_4_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4_2_1_1__0__Impl
	rule__TerminalExpression__Group_4_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaKeyword_4_2_1_1_0()); }

	',' 

{ after(grammarAccess.getTerminalExpressionAccess().getCommaKeyword_4_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getArgumentsAssignment_4_2_1_1_1()); }
(rule__TerminalExpression__ArgumentsAssignment_4_2_1_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getArgumentsAssignment_4_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveLiteral__Group_3__0__Impl
	rule__PrimitiveLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getIntLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getPrimitiveLiteralAccess().getIntLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getValueAssignment_3_1()); }
(rule__PrimitiveLiteral__ValueAssignment_3_1)
{ after(grammarAccess.getPrimitiveLiteralAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveLiteral__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveLiteral__Group_4__0__Impl
	rule__PrimitiveLiteral__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getBooleanLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getPrimitiveLiteralAccess().getBooleanLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveLiteral__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveLiteral__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getValueAssignment_4_1()); }
(rule__PrimitiveLiteral__ValueAssignment_4_1)
{ after(grammarAccess.getPrimitiveLiteralAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveLiteral__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveLiteral__Group_5__0__Impl
	rule__PrimitiveLiteral__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getFloatLiteralAction_5_0()); }
(

)
{ after(grammarAccess.getPrimitiveLiteralAccess().getFloatLiteralAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveLiteral__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveLiteral__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getValueAssignment_5_1()); }
(rule__PrimitiveLiteral__ValueAssignment_5_1)
{ after(grammarAccess.getPrimitiveLiteralAccess().getValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThenBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThenBlock__Group__0__Impl
	rule__ThenBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getAlternatives_0()); }
(rule__ThenBlock__Alternatives_0)
{ after(grammarAccess.getThenBlockAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThenBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThenBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getAlternatives_1()); }
(rule__ThenBlock__Alternatives_1)
{ after(grammarAccess.getThenBlockAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThenBlock__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThenBlock__Group_1_0__0__Impl
	rule__ThenBlock__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getLeftCurlyBracketKeyword_1_0_0()); }

	'{' 

{ after(grammarAccess.getThenBlockAccess().getLeftCurlyBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThenBlock__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThenBlock__Group_1_0__1__Impl
	rule__ThenBlock__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getStatementsAssignment_1_0_1()); }
(rule__ThenBlock__StatementsAssignment_1_0_1)*
{ after(grammarAccess.getThenBlockAccess().getStatementsAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThenBlock__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThenBlock__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getRightCurlyBracketKeyword_1_0_2()); }

	'}' 

{ after(grammarAccess.getThenBlockAccess().getRightCurlyBracketKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CreateStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateStatement__Group__0__Impl
	rule__CreateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateStatementAccess().getGroup_0()); }
(rule__CreateStatement__Group_0__0)?
{ after(grammarAccess.getCreateStatementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateStatementAccess().getExpressionAssignment_1()); }
(rule__CreateStatement__ExpressionAssignment_1)
{ after(grammarAccess.getCreateStatementAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CreateStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateStatement__Group_0__0__Impl
	rule__CreateStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateStatementAccess().getVarAssignment_0_0()); }
(rule__CreateStatement__VarAssignment_0_0)
{ after(grammarAccess.getCreateStatementAccess().getVarAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateStatementAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getCreateStatementAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CreateClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group__0__Impl
	rule__CreateClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getCreateClassAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group__1__Impl
	rule__CreateClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getTypeAssignment_1()); }
(rule__CreateClass__TypeAssignment_1)
{ after(grammarAccess.getCreateClassAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getGroup_2()); }
(rule__CreateClass__Group_2__0)?
{ after(grammarAccess.getCreateClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CreateClass__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group_2__0__Impl
	rule__CreateClass__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getCreateClassAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateClass__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group_2__1__Impl
	rule__CreateClass__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getGroup_2_1()); }
(rule__CreateClass__Group_2_1__0)?
{ after(grammarAccess.getCreateClassAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateClass__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getCreateClassAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CreateClass__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group_2_1__0__Impl
	rule__CreateClass__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getSettersAssignment_2_1_0()); }
(rule__CreateClass__SettersAssignment_2_1_0)
{ after(grammarAccess.getCreateClassAccess().getSettersAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateClass__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getGroup_2_1_1()); }
(rule__CreateClass__Group_2_1_1__0)*
{ after(grammarAccess.getCreateClassAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CreateClass__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group_2_1_1__0__Impl
	rule__CreateClass__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getCreateClassAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CreateClass__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CreateClass__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getSettersAssignment_2_1_1_1()); }
(rule__CreateClass__SettersAssignment_2_1_1_1)
{ after(grammarAccess.getCreateClassAccess().getSettersAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__0__Impl
	rule__ListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__1__Impl
	rule__ListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_1()); }
(rule__ListLiteral__Group_1__0)?
{ after(grammarAccess.getListLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_1__0__Impl
	rule__ListLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getItemsAssignment_1_0()); }
(rule__ListLiteral__ItemsAssignment_1_0)
{ after(grammarAccess.getListLiteralAccess().getItemsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_1_1()); }
(rule__ListLiteral__Group_1_1__0)*
{ after(grammarAccess.getListLiteralAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListLiteral__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_1_1__0__Impl
	rule__ListLiteral__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getListLiteralAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getItemsAssignment_1_1_1()); }
(rule__ListLiteral__ItemsAssignment_1_1_1)
{ after(grammarAccess.getListLiteralAccess().getItemsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarRefLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarRefLiteral__Group__0__Impl
	rule__VarRefLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarRefLiteralAccess().getDollarSignKeyword_0()); }

	'$' 

{ after(grammarAccess.getVarRefLiteralAccess().getDollarSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarRefLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarRefLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarRefLiteralAccess().getVarRefAssignment_1()); }
(rule__VarRefLiteral__VarRefAssignment_1)
{ after(grammarAccess.getVarRefLiteralAccess().getVarRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Setter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Setter__Group__0__Impl
	rule__Setter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getPropertyAssignment_0()); }
(rule__Setter__PropertyAssignment_0)
{ after(grammarAccess.getSetterAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Setter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Setter__Group__1__Impl
	rule__Setter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getAlternatives_1()); }
(rule__Setter__Alternatives_1)
{ after(grammarAccess.getSetterAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Setter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Setter__Group__2__Impl
	rule__Setter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getExpressionAssignment_2()); }
(rule__Setter__ExpressionAssignment_2)
{ after(grammarAccess.getSetterAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Setter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Setter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getGuardAssignment_3()); }
(rule__Setter__GuardAssignment_3)?
{ after(grammarAccess.getSetterAccess().getGuardAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
(rule__Function__NameAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getJavaClassAssignment_2()); }
(rule__Function__JavaClassAssignment_2)
{ after(grammarAccess.getFunctionAccess().getJavaClassAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNumberSignKeyword_3()); }

	'#' 

{ after(grammarAccess.getFunctionAccess().getNumberSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOperationAssignment_4()); }
(rule__Function__OperationAssignment_4)
{ after(grammarAccess.getFunctionAccess().getOperationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UpdateStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__0__Impl
	rule__UpdateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }

	'update' 

{ after(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__1__Impl
	rule__UpdateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getVarRefAssignment_1()); }
(rule__UpdateStatement__VarRefAssignment_1)
{ after(grammarAccess.getUpdateStatementAccess().getVarRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup_2()); }
(rule__UpdateStatement__Group_2__0)?
{ after(grammarAccess.getUpdateStatementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UpdateStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_2__0__Impl
	rule__UpdateStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getUpdateStatementAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_2__1__Impl
	rule__UpdateStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup_2_1()); }
(rule__UpdateStatement__Group_2_1__0)?
{ after(grammarAccess.getUpdateStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getUpdateStatementAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UpdateStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_2_1__0__Impl
	rule__UpdateStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getSettersAssignment_2_1_0()); }
(rule__UpdateStatement__SettersAssignment_2_1_0)
{ after(grammarAccess.getUpdateStatementAccess().getSettersAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getGroup_2_1_1()); }
(rule__UpdateStatement__Group_2_1_1__0)*
{ after(grammarAccess.getUpdateStatementAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UpdateStatement__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_2_1_1__0__Impl
	rule__UpdateStatement__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getUpdateStatementAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateStatement__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getSettersAssignment_2_1_1_1()); }
(rule__UpdateStatement__SettersAssignment_2_1_1_1)
{ after(grammarAccess.getUpdateStatementAccess().getSettersAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Scaffolding__ScaffoldAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldingAccess().getScaffoldScaffoldParserRuleCall_0_0()); }
	ruleScaffold{ after(grammarAccess.getScaffoldingAccess().getScaffoldScaffoldParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scaffolding__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldingAccess().getElementsScaffoldingElementParserRuleCall_1_0()); }
	ruleScaffoldingElement{ after(grammarAccess.getScaffoldingAccess().getElementsScaffoldingElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scaffold__RefPackageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScaffoldAccess().getRefPackageSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getScaffoldAccess().getRefPackageSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__WhenAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getWhenWhenBlockParserRuleCall_2_0()); }
	ruleWhenBlock{ after(grammarAccess.getRuleAccess().getWhenWhenBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getThenThenBlockParserRuleCall_3_0()); }
	ruleThenBlock{ after(grammarAccess.getRuleAccess().getThenThenBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__MatchesAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getMatchesMatchParserRuleCall_1_0_1_0()); }
	ruleMatch{ after(grammarAccess.getWhenBlockAccess().getMatchesMatchParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenBlock__MatchesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenBlockAccess().getMatchesMatchParserRuleCall_1_1_0()); }
	ruleMatch{ after(grammarAccess.getWhenBlockAccess().getMatchesMatchParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Match__VarAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getVarVariableParserRuleCall_0_0_0()); }
	ruleVariable{ after(grammarAccess.getMatchAccess().getVarVariableParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Match__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getTypeEClassCrossReference_1_0()); }
(
{ before(grammarAccess.getMatchAccess().getTypeEClassIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMatchAccess().getTypeEClassIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMatchAccess().getTypeEClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ParamsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getParamsParamParserRuleCall_2_1_0_0()); }
	ruleParam{ after(grammarAccess.getMatchAccess().getParamsParamParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ParamsAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getParamsParamParserRuleCall_2_1_1_1_0()); }
	ruleParam{ after(grammarAccess.getMatchAccess().getParamsParamParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getPropertyBindingExpressionParserRuleCall_0_0()); }
	ruleBindingExpression{ after(grammarAccess.getParamAccess().getPropertyBindingExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__VarAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getVarVariableParserRuleCall_1_1_0()); }
	ruleVariable{ after(grammarAccess.getParamAccess().getVarVariableParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionAccess().getOpOPERATOR_LOW_PRIORITYTerminalRuleCall_1_1_0()); }
	RULE_OPERATOR_LOW_PRIORITY{ after(grammarAccess.getBindingExpressionAccess().getOpOPERATOR_LOW_PRIORITYTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionAccess().getRightBindingExpressionParserRuleCall_1_2_0()); }
	ruleBindingExpression{ after(grammarAccess.getBindingExpressionAccess().getRightBindingExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpressionHigh__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getOpOPERATOR_HIGH_PRIORITYTerminalRuleCall_1_1_0()); }
	RULE_OPERATOR_HIGH_PRIORITY{ after(grammarAccess.getBindingExpressionHighAccess().getOpOPERATOR_HIGH_PRIORITYTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingExpressionHigh__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingExpressionHighAccess().getRightBindingExpressionHighParserRuleCall_1_2_0()); }
	ruleBindingExpressionHigh{ after(grammarAccess.getBindingExpressionHighAccess().getRightBindingExpressionHighParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__ExpAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getExpBindingTerminalExpressionParserRuleCall_2_2_0()); }
	ruleBindingTerminalExpression{ after(grammarAccess.getBindingTerminalExpressionAccess().getExpBindingTerminalExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__FunctionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getFunctionFunctionCrossReference_3_1_0()); }
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getFunctionFunctionIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingTerminalExpressionAccess().getFunctionFunctionIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getBindingTerminalExpressionAccess().getFunctionFunctionCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__ArgumentsAssignment_3_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsBindingExpressionParserRuleCall_3_2_1_0_0()); }
	ruleBindingExpression{ after(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsBindingExpressionParserRuleCall_3_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BindingTerminalExpression__ArgumentsAssignment_3_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsBindingExpressionParserRuleCall_3_2_1_1_1_0()); }
	ruleBindingExpression{ after(grammarAccess.getBindingTerminalExpressionAccess().getArgumentsBindingExpressionParserRuleCall_3_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOpOPERATOR_LOW_PRIORITYTerminalRuleCall_1_1_0()); }
	RULE_OPERATOR_LOW_PRIORITY{ after(grammarAccess.getExpressionAccess().getOpOPERATOR_LOW_PRIORITYTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionHigh__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionHighAccess().getOpOPERATOR_HIGH_PRIORITYTerminalRuleCall_1_1_0()); }
	RULE_OPERATOR_HIGH_PRIORITY{ after(grammarAccess.getExpressionHighAccess().getOpOPERATOR_HIGH_PRIORITYTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionHigh__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionHighAccess().getRightExpressionHighParserRuleCall_1_2_0()); }
	ruleExpressionHigh{ after(grammarAccess.getExpressionHighAccess().getRightExpressionHighParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ExpAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpTerminalExpressionParserRuleCall_3_2_0()); }
	ruleTerminalExpression{ after(grammarAccess.getTerminalExpressionAccess().getExpTerminalExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__FunctionAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getFunctionFunctionCrossReference_4_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getFunctionFunctionIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTerminalExpressionAccess().getFunctionFunctionIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getTerminalExpressionAccess().getFunctionFunctionCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ArgumentsAssignment_4_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getArgumentsExpressionParserRuleCall_4_2_1_0_0()); }
	ruleExpression{ after(grammarAccess.getTerminalExpressionAccess().getArgumentsExpressionParserRuleCall_4_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ArgumentsAssignment_4_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getArgumentsExpressionParserRuleCall_4_2_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getTerminalExpressionAccess().getArgumentsExpressionParserRuleCall_4_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getValueINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getPrimitiveLiteralAccess().getValueINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getPrimitiveLiteralAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveLiteral__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveLiteralAccess().getValueFLOATTerminalRuleCall_5_1_0()); }
	RULE_FLOAT{ after(grammarAccess.getPrimitiveLiteralAccess().getValueFLOATTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureRefLiteral__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureRefLiteralAccess().getRefEStructuralFeatureCrossReference_0()); }
(
{ before(grammarAccess.getFeatureRefLiteralAccess().getRefEStructuralFeatureIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFeatureRefLiteralAccess().getRefEStructuralFeatureIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFeatureRefLiteralAccess().getRefEStructuralFeatureCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__StatementsAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getStatementsStatementParserRuleCall_1_0_1_0()); }
	ruleStatement{ after(grammarAccess.getThenBlockAccess().getStatementsStatementParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThenBlock__StatementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenBlockAccess().getStatementsStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getThenBlockAccess().getStatementsStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStatement__VarAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateStatementAccess().getVarVariableParserRuleCall_0_0_0()); }
	ruleVariable{ after(grammarAccess.getCreateStatementAccess().getVarVariableParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateStatement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCreateStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getTypeEClassCrossReference_1_0()); }
(
{ before(grammarAccess.getCreateClassAccess().getTypeEClassIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getCreateClassAccess().getTypeEClassIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getCreateClassAccess().getTypeEClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__SettersAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getSettersSetterParserRuleCall_2_1_0_0()); }
	ruleSetter{ after(grammarAccess.getCreateClassAccess().getSettersSetterParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CreateClass__SettersAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreateClassAccess().getSettersSetterParserRuleCall_2_1_1_1_0()); }
	ruleSetter{ after(grammarAccess.getCreateClassAccess().getSettersSetterParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ItemsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getItemsExpressionParserRuleCall_1_0_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getItemsExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ItemsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getItemsExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getItemsExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefLiteral__VarRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarRefLiteralAccess().getVarRefVariableCrossReference_1_0()); }
(
{ before(grammarAccess.getVarRefLiteralAccess().getVarRefVariableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVarRefLiteralAccess().getVarRefVariableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVarRefLiteralAccess().getVarRefVariableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getPropertyEStructuralFeatureCrossReference_0_0()); }
(
{ before(grammarAccess.getSetterAccess().getPropertyEStructuralFeatureIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSetterAccess().getPropertyEStructuralFeatureIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSetterAccess().getPropertyEStructuralFeatureCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSetterAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setter__GuardAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetterAccess().getGuardGuardKeyword_3_0()); }
(
{ before(grammarAccess.getSetterAccess().getGuardGuardKeyword_3_0()); }

	'guard' 

{ after(grammarAccess.getSetterAccess().getGuardGuardKeyword_3_0()); }
)

{ after(grammarAccess.getSetterAccess().getGuardGuardKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__JavaClassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getJavaClassJvmGenericTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getFunctionAccess().getJavaClassJvmGenericTypeFQNParserRuleCall_2_0_1()); }
	ruleFQN{ after(grammarAccess.getFunctionAccess().getJavaClassJvmGenericTypeFQNParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFunctionAccess().getJavaClassJvmGenericTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__OperationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getOperationJvmOperationCrossReference_4_0()); }
(
{ before(grammarAccess.getFunctionAccess().getOperationJvmOperationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getOperationJvmOperationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getFunctionAccess().getOperationJvmOperationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__VarRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getVarRefVariableCrossReference_1_0()); }
(
{ before(grammarAccess.getUpdateStatementAccess().getVarRefVariableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getUpdateStatementAccess().getVarRefVariableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getUpdateStatementAccess().getVarRefVariableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__SettersAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getSettersSetterParserRuleCall_2_1_0_0()); }
	ruleSetter{ after(grammarAccess.getUpdateStatementAccess().getSettersSetterParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__SettersAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateStatementAccess().getSettersSetterParserRuleCall_2_1_1_1_0()); }
	ruleSetter{ after(grammarAccess.getUpdateStatementAccess().getSettersSetterParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_OPERATOR_HIGH_PRIORITY : ('<'|'>'|'='|'!='|'>='|'<='|'/'|'*');

RULE_OPERATOR_LOW_PRIORITY : ('+'|'-');

RULE_BOOLEAN : ('true'|'false');

RULE_FLOAT : '-'? ('0'..'9')+ '.' '0'..'9';

RULE_INT : '-'? ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


